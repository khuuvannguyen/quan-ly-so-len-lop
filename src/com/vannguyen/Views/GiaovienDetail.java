/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vannguyen.Views;

import com.vannguyen.Dao.NewDao;
import com.vannguyen.Model.DetailTrang;
import com.vannguyen.Services.DetailTrangServices;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen
 */
public class GiaovienDetail extends javax.swing.JFrame {

    /**
     * Creates new form GiaovienDetail
     */
    DetailTrangServices detailTrangServices;
    DefaultTableModel defaultTableModel;
    String maTrang = "";
    String maMH = "";
    String ngayLL = "";
    String buoiLL = "";
    String phong = "";
    int lyThuyet = 0;
    int thucHanh = 0;
    String tomTat = "";
    String sinhvienVang = "";
    boolean giaovienKy = true;
    boolean nghiCheck = false;
    String maSV = null;
    int lythuyetTXT = 0;
    int thuchanhTXT = 0;
    int lythuyetTable = 0;
    int thuchanhTable = 0;
    int lythuyetResult = 0;
    int thuchanhResult = 0;

    public GiaovienDetail(String maTrang, String maMH) {
        initComponents();
        this.maTrang = maTrang;
        this.maMH = maMH;
        System.out.println("maTrang truyen = " + maTrang);
        detailTrangServices = new DetailTrangServices();
        defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        table.setModel(defaultTableModel);
        table.setAutoCreateRowSorter(true);
        defaultTableModel.addColumn("Ngày lên lớp");
        defaultTableModel.addColumn("Buổi");
        defaultTableModel.addColumn("Phòng");
        defaultTableModel.addColumn("Số tiết lý thuyết");
        defaultTableModel.addColumn("Số tiết thực hành");
        defaultTableModel.addColumn("Tóm tắt nội dung");
        defaultTableModel.addColumn("Sinh viên vắng");
        FillData(detailTrangServices.getDetail(maTrang));
        lythuyetTXT = NewDao.getLythuyet(this.maMH);
        thuchanhTXT = NewDao.getThuchanh(this.maMH);
        getTietFromTable();
    }

    private void FillData(List<DetailTrang> list) {
        defaultTableModel.setRowCount(0);
        for (DetailTrang detailTrang : list) {
            defaultTableModel.addRow(new Object[]{
                detailTrang.getNgayLL(),
                detailTrang.getBuoi(),
                detailTrang.getPhong(),
                detailTrang.getLyThuyet(),
                detailTrang.getThucHanh(),
                detailTrang.getTomTat(),
                detailTrang.getSinhvienVang()

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txtNgayLL = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        radioHoc = new javax.swing.JRadioButton();
        radioNghi = new javax.swing.JRadioButton();
        radioDoiGio = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        radioSang = new javax.swing.JRadioButton();
        radioChieu = new javax.swing.JRadioButton();
        radioToi = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtPhong = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        spinnerLyThuyet = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        spinnerThucHanh = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTomTat = new javax.swing.JEditorPane();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSinhvienVang = new javax.swing.JEditorPane();
        btnAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtLyThuyet = new javax.swing.JTextField();
        txtThucHanh = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Thông tin chi tiết");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Ngày lên lớp");

        txtNgayLL.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Tình trạng");

        buttonGroup1.add(radioHoc);
        radioHoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioHoc.setSelected(true);
        radioHoc.setText("Học");
        radioHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHocActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioNghi);
        radioNghi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNghi.setText("Nghỉ");
        radioNghi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNghiActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioDoiGio);
        radioDoiGio.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDoiGio.setText("Đổi giờ");
        radioDoiGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDoiGioActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Buổi");

        buttonGroup2.add(radioSang);
        radioSang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioSang.setSelected(true);
        radioSang.setText("Sáng");

        buttonGroup2.add(radioChieu);
        radioChieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioChieu.setText("Chiều");

        buttonGroup2.add(radioToi);
        radioToi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioToi.setText("Tối");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Phòng");

        txtPhong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Số tiết lý thuyết");

        spinnerLyThuyet.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        spinnerLyThuyet.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spinnerLyThuyet.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerLyThuyetStateChanged(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Số tiết thực hành");

        spinnerThucHanh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        spinnerThucHanh.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spinnerThucHanh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerThucHanhStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Tóm tắt nội dung");

        txtTomTat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(txtTomTat);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Sinh viên vắng");

        txtSinhvienVang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(txtSinhvienVang);

        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAdd.setText("Thêm mới");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Số tiết lý thuyết còn lại");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Số tiết thực hành còn lại");

        txtLyThuyet.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtLyThuyet.setEnabled(false);

        txtThucHanh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtThucHanh.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel14))
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinnerLyThuyet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerThucHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioSang)
                                            .addComponent(radioHoc))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioNghi)
                                            .addComponent(radioChieu))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioDoiGio)
                                            .addComponent(radioToi)))
                                    .addComponent(txtNgayLL, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLyThuyet, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(61, 61, 61)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtThucHanh, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 269, Short.MAX_VALUE))
                                    .addComponent(jScrollPane3))))
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNgayLL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(radioHoc)
                            .addComponent(radioNghi)
                            .addComponent(radioDoiGio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(radioSang)
                            .addComponent(radioChieu)
                            .addComponent(radioToi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(spinnerLyThuyet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(spinnerThucHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtLyThuyet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtThucHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void radioHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHocActionPerformed
        // TODO add your handling code here:
        txtPhong.setEnabled(true);
        txtSinhvienVang.setEnabled(true);
        spinnerLyThuyet.setEnabled(true);
        spinnerThucHanh.setEnabled(true);
        nghiCheck = false;
    }//GEN-LAST:event_radioHocActionPerformed

    private void radioNghiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNghiActionPerformed
        // TODO add your handling code here:
        phong = " ";
        txtPhong.setText("");
        spinnerLyThuyet.setValue(Integer.valueOf(0));
        spinnerThucHanh.setValue(Integer.valueOf(0));
        txtPhong.setEnabled(false);
        txtSinhvienVang.setEnabled(false);
        spinnerLyThuyet.setEnabled(false);
        spinnerThucHanh.setEnabled(false);
        nghiCheck = true;
        //---------------
    }//GEN-LAST:event_radioNghiActionPerformed

    private void radioDoiGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDoiGioActionPerformed
        // TODO add your handling code here:
        phong = " ";
        txtPhong.setText("");
        spinnerLyThuyet.setValue(Integer.valueOf(0));
        spinnerThucHanh.setValue(Integer.valueOf(0));
        txtPhong.setEnabled(false);
        txtSinhvienVang.setEnabled(false);
        spinnerLyThuyet.setEnabled(false);
        spinnerThucHanh.setEnabled(false);
        nghiCheck = true;
    }//GEN-LAST:event_radioDoiGioActionPerformed

    private void ShowError(String error) {
        JOptionPane.showMessageDialog(this, error, "Đã xảy ra lỗi", JOptionPane.ERROR_MESSAGE);
    }

    private void caculateLythuyet() {

    }

    private void getTietFromTable() {
        lythuyetTable = NewDao.sumLythuyet(maTrang);
        thuchanhTable = NewDao.sumThuchanh(maTrang);
        lythuyetResult = lythuyetTXT - lythuyetTable;
        thuchanhResult = thuchanhTXT - thuchanhTable;
        txtLyThuyet.setText(String.valueOf(lythuyetResult));
        txtThucHanh.setText(String.valueOf(thuchanhResult));
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (txtNgayLL.getText().trim().isEmpty()) {
            ShowError("Vui lòng nhập ngày lên lớp");
        } else {
            if (txtPhong.getText().isEmpty() && radioHoc.isSelected()) {
                ShowError("Vui lòng nhập phòng học");
            } else {
                if (txtTomTat.getText().trim().isEmpty()) {
                    ShowError("Vui lòng tóm tắt nội dung buổi học");
                } else {
                    //buổi đó nghỉ
                    if (radioNghi.isSelected() && txtTomTat.getText().trim().isEmpty()) {
                        ShowError("Vui lòng nêu rõ lý do nghỉ");
                    } else {
                        //Đổi giờ
                        if (radioDoiGio.isSelected() && txtTomTat.getText().trim().isEmpty()) {
                            ShowError("Vui lòng nêu rõ buổi học đã được đổi với giáo viên nào");
                        } else {
                            //đưa dữ liệu và csdl
                            ngayLL = txtNgayLL.getText().trim();
                            if (radioSang.isSelected()) {
                                buoiLL = "Sáng";
                            } else if (radioChieu.isSelected()) {
                                buoiLL = "Chiều";
                            } else if (radioToi.isSelected()) {
                                buoiLL = "Tối";
                            }
                            phong = txtPhong.getText().trim();
                            lyThuyet = Integer.parseInt(String.valueOf(spinnerLyThuyet.getValue()));
                            thucHanh = Integer.parseInt(String.valueOf(spinnerThucHanh.getValue()));
                            tomTat = txtTomTat.getText().trim();
                            sinhvienVang = txtSinhvienVang.getText().trim();
                            if (NewDao.duplicateNgayBuoi(maTrang, ngayLL, buoiLL)) {
                                if (lyThuyet <= lythuyetResult && thucHanh <= thuchanhResult) {
                                    if (lyThuyet == 0 && thucHanh == 0 && !nghiCheck) {
                                        ShowError("Số tiết dạy không hợp lệ");
                                    } else {
                                        DetailTrang detailTrang = new DetailTrang(maSV, maTrang, ngayLL, buoiLL, phong, lyThuyet, thucHanh, tomTat, sinhvienVang, true);
                                        detailTrangServices.addDetailTrang(detailTrang);
                                        FillData(detailTrangServices.getDetail(maTrang));
                                        getTietFromTable();
                                    }
                                } else {
                                    ShowError("Số tiết dạy không hợp lệ");
                                }
                            } else {
                                ShowError("Đã tồn tại ngày " + ngayLL + ", buổi " + buoiLL);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void spinnerLyThuyetStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerLyThuyetStateChanged
        // TODO add your handling code here:
        spinnerThucHanh.setValue(0);
    }//GEN-LAST:event_spinnerLyThuyetStateChanged

    private void spinnerThucHanhStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerThucHanhStateChanged
        // TODO add your handling code here:
        spinnerLyThuyet.setValue(0);
    }//GEN-LAST:event_spinnerThucHanhStateChanged

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GiaovienDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GiaovienDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GiaovienDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GiaovienDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GiaovienDetail().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton radioChieu;
    private javax.swing.JRadioButton radioDoiGio;
    private javax.swing.JRadioButton radioHoc;
    private javax.swing.JRadioButton radioNghi;
    private javax.swing.JRadioButton radioSang;
    private javax.swing.JRadioButton radioToi;
    private javax.swing.JSpinner spinnerLyThuyet;
    private javax.swing.JSpinner spinnerThucHanh;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtLyThuyet;
    private javax.swing.JFormattedTextField txtNgayLL;
    private javax.swing.JTextField txtPhong;
    private javax.swing.JEditorPane txtSinhvienVang;
    private javax.swing.JTextField txtThucHanh;
    private javax.swing.JEditorPane txtTomTat;
    // End of variables declaration//GEN-END:variables
}
