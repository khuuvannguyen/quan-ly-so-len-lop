/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vannguyen.Views;

import com.vannguyen.Dao.LoginDao;
import com.vannguyen.Services.SinhvienServices;
import com.vannguyen.Dao.SinhvienDao;
import com.vannguyen.Model.Sinhvien;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen
 */
public class InputSinhvien extends javax.swing.JPanel {

    /**
     * Creates new form InputSinhvien
     */
    SinhvienServices sinhvienServices;
    DefaultTableModel defaultTableModel;

    public InputSinhvien() {
        initComponents();
        sinhvienServices = new SinhvienServices();
        defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        table.setModel(defaultTableModel);
        table.setAutoCreateRowSorter(true);
        table.setAutoscrolls(true);
        defaultTableModel.addColumn("Mã sinh viên");
        defaultTableModel.addColumn("Họ và tên");
        defaultTableModel.addColumn("Giới tính");
        defaultTableModel.addColumn("Năm sinh");
        defaultTableModel.addColumn("Lớp");
        fillData(sinhvienServices.getSinhvien());
        LoadComboBox();
    }

    private void LoadComboBox() {
        ArrayList<String> list = sinhvienServices.LoadComboBox();
        for (String item : list) {
            comboBoxLop.addItem(item);
        }
    }

    private void showError(String title, String detail) {
        JOptionPane.showMessageDialog(this, detail, title, JOptionPane.ERROR_MESSAGE);
    }

    private void fillData(List<Sinhvien> list) {
        for (Sinhvien sinhvien : list) {
            defaultTableModel.addRow(new Object[]{sinhvien.getMaSinhvien(), sinhvien.getHoTen(),
                sinhvien.getGioiTinh(), sinhvien.getNamSinh(), sinhvien.getMaLop()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        radioNam = new javax.swing.JRadioButton();
        radioNu = new javax.swing.JRadioButton();
        labelTitle = new javax.swing.JLabel();
        radioKhac = new javax.swing.JRadioButton();
        labelMaSV = new javax.swing.JLabel();
        comboBoxLop = new javax.swing.JComboBox<>();
        labelHoten = new javax.swing.JLabel();
        labelGioiTinh = new javax.swing.JLabel();
        btnAddNew = new javax.swing.JButton();
        labelNamSinh = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        labelLop = new javax.swing.JLabel();
        btnReLoad = new javax.swing.JButton();
        txtMaSinhVien = new javax.swing.JTextField();
        txtHoten = new javax.swing.JTextField();
        txtNamSinh = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(800, 700));

        buttonGroup1.add(radioNam);
        radioNam.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNam.setSelected(true);
        radioNam.setText("Nam");
        radioNam.setToolTipText("Chọn giới tính của sinh viên");
        radioNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioNu);
        radioNu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNu.setText("Nữ");
        radioNu.setToolTipText("Chọn giới tính của sinh viên");

        labelTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Nhập thông tin sinh viên");

        buttonGroup1.add(radioKhac);
        radioKhac.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioKhac.setText("Khác");
        radioKhac.setToolTipText("Chọn giới tính của sinh viên");

        labelMaSV.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelMaSV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMaSV.setText("Mã sinh viên");

        comboBoxLop.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        comboBoxLop.setToolTipText("Chọn lớp cho sinh viên");

        labelHoten.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelHoten.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelHoten.setText("Họ và tên");

        labelGioiTinh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelGioiTinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelGioiTinh.setText("Giới tính");

        btnAddNew.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddNew.setText("Thêm");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        labelNamSinh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelNamSinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelNamSinh.setText("Năm sinh");

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelLop.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelLop.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelLop.setText("Lớp");

        btnReLoad.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnReLoad.setText("Tải lại giao diện");
        btnReLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReLoadActionPerformed(evt);
            }
        });

        txtMaSinhVien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMaSinhVien.setToolTipText("Nhập mã sinh viên");

        txtHoten.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtHoten.setToolTipText("Nhập họ tên của sinh viên");

        txtNamSinh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));
        txtNamSinh.setToolTipText("Nhập năm sinh của sinh viên");
        txtNamSinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNamSinh, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelMaSV, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaSinhVien, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(txtNamSinh, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelHoten)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioNam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioNu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioKhac)))))
                        .addGap(0, 116, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(labelLop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReLoad))
                    .addComponent(comboBoxLop, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelHoten, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelMaSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtHoten)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNamSinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNamSinh, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioNu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(radioKhac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxLop))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNew)
                    .addComponent(btnDelete)
                    .addComponent(btnReLoad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioNamActionPerformed

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        // TODO add your handling code here:
        //Bắt trường hợp text field bị bỏ trống
        if (txtMaSinhVien.getText().trim().isEmpty()) {
            showError("Đã xảy ra lỗi", "Mã sinh viên không được bỏ trống");
        } else {
            //Trường hợp text field không đúng định dạng
            String maSinhvien = txtMaSinhVien.getText();
            //Định dạng dữ liệu: 2 ký tự + 3 số
            String reg = "^\\w{2}\\d{3}$";
            if (!maSinhvien.matches(reg)) {
                showError("Đã xảy ra lỗi", "Mã sinh viên không đúng định dạng\n"
                        + "Ví dụ: SV123");
            } else {
                if (sinhvienServices.DuplicateSinhvien(maSinhvien)) {
                    showError("Đã xảy ra lỗi", "Mã sinh viên đã tồn tại");
                } else {
                    if (txtHoten.getText().trim().isEmpty()) {
                        showError("Đã xảy ra lỗi", "Họ và tên sinh viên không được bỏ trống");
                    } else {
                        if (txtNamSinh.getText().trim().isEmpty()) {
                            showError("Đã xảy ra lỗi", "Năm sinh của sinh viên không được bỏ trống");
                        } else {
                            String hoten = txtHoten.getText();
                            String namSinh = txtNamSinh.getText();
                            String gioitinh = "";
                            String malop;
                            if (radioNam.isSelected()) {
                                gioitinh += "Nam";
                            } else if (radioNu.isSelected()) {
                                gioitinh += "Nữ";
                            } else if (radioKhac.isSelected()) {
                                gioitinh += "Khác";
                            }

                            //Xử lý Combo Box ----------------------------
                            //Lấy index của Combo Box được chọn
                            int index = comboBoxLop.getSelectedIndex();
                            //Chuyển index thành đối tượng tương đương
                            String selectedText = comboBoxLop.getItemAt(index);
                            //Chuyển tên lớp thành mã lớp và gán cho biến
                            malop = sinhvienServices.TakeMaLop(selectedText);
                            //Xử lý Combo Box ----------------------------

                            //Khai báo Contructor
                            Sinhvien sinhvien = new Sinhvien(maSinhvien, hoten, gioitinh, namSinh, malop);
                            //Thêm sinh viên mới bằng Contructor.
                            sinhvienServices.addSinhvien(sinhvien);
                            try {
                                LoginDao.addLogin(maSinhvien, "123", "sinhvien");
                            } catch (Exception e) {
                            }
                            //Xóa toàn bộ dữ liệu trong JTable
                            defaultTableModel.setRowCount(0);
                            //Đổ lại dữ liệu ra JTable
                            fillData(sinhvienServices.getSinhvien());
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if (row == -1) {
            showError("Đã xảy ra lỗi", "Vui lòng chọn đối tượng muốn xóa");
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa?");
            if (confirm == JOptionPane.YES_OPTION) {
                String masinhvien = (String) table.getValueAt(row, 0);
                sinhvienServices.deleteSinhvien(masinhvien);
                defaultTableModel.setRowCount(0);
                fillData(sinhvienServices.getSinhvien());
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReLoadActionPerformed
        // TODO add your handling code here:
        defaultTableModel.setRowCount(0);
        fillData(sinhvienServices.getSinhvien());
        comboBoxLop.removeAllItems();
        LoadComboBox();
    }//GEN-LAST:event_btnReLoadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReLoad;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBoxLop;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelGioiTinh;
    private javax.swing.JLabel labelHoten;
    private javax.swing.JLabel labelLop;
    private javax.swing.JLabel labelMaSV;
    private javax.swing.JLabel labelNamSinh;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JRadioButton radioKhac;
    private javax.swing.JRadioButton radioNam;
    private javax.swing.JRadioButton radioNu;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtMaSinhVien;
    private javax.swing.JFormattedTextField txtNamSinh;
    // End of variables declaration//GEN-END:variables
}
